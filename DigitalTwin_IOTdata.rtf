{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import random\
import pandas as pd\
from sklearn.linear_model import LinearRegression\
import matplotlib.pyplot as plt\
\
# Generate Simulated IoT Sensor Data\
data = \{\
    'time': list(range(100)),\
    'temperature': [random.uniform(20, 30) for _ in range(100)],\
    'humidity': [random.uniform(30, 70) for _ in range(100)]\
\}\
df = pd.DataFrame(data)\
\
# Train a Linear Regression Model to Predict Temperature\
X = df[['time', 'humidity']]\
y = df['temperature']\
model = LinearRegression()\
model.fit(X, y)\
\
# Make Predictions\
df['predicted_temp'] = model.predict(X)\
\
# Visualization: Actual vs Predicted Temperature\
plt.plot(df['time'], df['temperature'], label='Actual Temperature')\
plt.plot(df['time'], df['predicted_temp'], label='Predicted Temperature', linestyle='--')\
plt.legend()\
plt.title('Actual vs Predicted Temperature')\
plt.xlabel('Time')\
plt.ylabel('Temperature')\
plt.show()\
}